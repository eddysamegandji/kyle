---
openapi: 3.0.3
info:
  title: Kyle management API
  description: Internal API
  contact:
    name: Eddy Amegandji
    email: eddysamegandji@gmail.com
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: local development
tags:
  - name: "customer-resource"
  - name: "auth-resource"
paths:
  /customers:
    get:
      summary: "Retrieve all the customers"
      tags: ["customer-resource"]
      operationId: getCustomers
#      security:
#        - basicAuth: []
      responses:
        '200':
          description: "List retrieved successfully"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerApi'
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'

    post:
      summary: "Create a new customer"
      tags: ["customer-resource"]
      operationId: createCustomer
#      security:
#        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerApi'
      responses:
        '201':
          description: "A detailed customer"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerApi'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'

  /customers/{id}:
    get:
      summary: "Retrieve details on customer"
      tags: [ "customer-resource" ]
      operationId: getCustomer
      parameters:
        - name: id
          description: "id of the customer."
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "A detailed customer"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerApi'
        '204':
          $ref: '#/components/responses/204'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'

    put:
      summary: "Edit customer"
      tags: [ "customer-resource" ]
      operationId: editCustomer
#      security:
#        - basicAuth: [ ]
      parameters:
        - name: id
          description: "The id of the customer."
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerApi'
      responses:
        '200':
          description: "A detailed customer"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerApi'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'

    delete:
      summary: "Delete customer"
      tags: [ "customer-resource" ]
      operationId: deleteCustomer
      parameters:
        - name: id
          description: "id of the customer."
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: "Customer was deleted"
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'

  /login:
    post:
      summary: "Login"
      tags: ["auth-resource"]
      operationId: login
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginApi'
      responses:
        '200':
          description: "Login successful"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseApi'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'

components:
  responses:
    '204':
      description: "No content"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    '401':
      description: "Unauthorized"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    '403':
      description: "Forbidden"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    '404':
      description: "Not found"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
  schemas:
    ApiError:
      type: object
      properties:
        status:
          type: integer
        error:
          type: string
        path:
          type: string
        timestamp:
          type: number
          format: double
        message:
          type: string

    UserApi:
      type: object
      properties:
        id:
          type: integer
        login:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        fullName:
          type: string
        email:
          type: string
        phone:
          type: string
        firstConnectionDate:
          type: string
          format: date-time
        lastConnectionDate:
          type: string
          format: date-time
        creationDate:
          type: string
          format: date-time
        creationUserId:
          type: integer
        deleteDate:
          type: string
          format: date-time
        deleteUserId:
          type: integer
        active:
          type: boolean
          default: true
#        skills:
#          type: object
#          properties:
#            id:
#              type: integer

    CustomerApi:
      type: object
      properties:
        customerId:
          type: integer
          format: int64
        title:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        birthDate:
          type: string
          format: date-time
        birthCity:
          type: string
        birthDepartment:
          type: string
        address1:
          type: string
        address2:
          type: string
        zipCode:
          type: string
        city:
          type: string
        country:
          type: string
        mobilePhone:
          type: string
        emailAddress:
          type: string
        emailAddress2:
          type: string
        companyName:
          type: string
        companyPosition:
          type: string
        workPhone:
          type: string
        kbis:
          type: string
        fax:
          type: string
        vip:
          type: boolean

    LoginApi:
      type: object
      properties:
        username:
          type: string
        password:
          type: string

    LoginResponseApi:
      type: object
      properties:
        isAuthenticated:
          type: boolean
          default: false
        accessToken:
          type: string
        username:
          type: string
        roles:
          type: string

